<?php
namespace App\Controllers;

use App\Modules\Router;
use App\Modules\Auth;
use App\Modules\TelegramApi;
use App\Models\Review;
use App\Classes\Message;
use App\Classes\Keyboard;
use App\Classes\Button;

class ReviewController extends BaseController {

  public function write($message, $photos, $text, $keyboard) {
    $last_item = Router::last_item();
    $user = Auth::user();

    $response = new Message($text, $keyboard);

    if($user->current_page != $last_item['id']) {
      $text = "<b>üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤</b>\n–í—ã –ø–æ–ø–æ–ª–Ω—è–ª —á–µ—Ä–µ–∑ –Ω–∞—Å –∫–∞–∫—É—é-–ª–∏–±–æ —É—Å–ª—É–≥—É –∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∫–∞–∫ –º—ã —Å—Ä–∞–±–æ—Ç–∞–ª–∏, —á–µ—Ä–∫–Ω–∏—Ç–µ –ø–∞—Ä—É —Å—Ç—Ä–æ–∫. –ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å —Ç–æ–∂–µ –ø–∏—à–∏—Ç–µ, –Ω–∞–º –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –∏ –¥–∞, –º—ã –ø—É–±–ª–∏–∫—É–µ–º –≤—Å–µ –æ—Ç–∑—ã–≤—ã. –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤! üëá";
      $keyboard = new Keyboard();
      $keyboard->addButtonLine([Button::$CANCEL]);
      $user->current_page = $last_item['id'];
      $user->save();
      $response->setText($text);
      $response->setKeyboard($keyboard);
    } else {
      $review = new Review([
        'chat_id' => $user->chat_id,
        'username' => $user->username,
        'data' => $message,
        'activ' => 0
      ]);
      $review->save();
      $response = [];
      $response[] = new Message('<b>–í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!</b>\nüïì <i>–î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.</i>');
      // TelegramApi::sendMessage($user->chat_id, '<b>–í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!</b>\nüïì <i>–î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.</i>', []);

      $notify_message = new Message("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $user->first_name $user->last_name –¥–æ–±–∞–≤–∏–ª –æ—Ç–∑—ã–≤:\n\n$message");
      $notify_keyboard = new Keyboard(true);

      $notify_keyboard->addButtonLine([Button::inline('–ü—Ä–∏–Ω—è—Ç—å', 'Review', 'acpt', $review->id), Button::inline('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', 'Review', 'dec', $review->id)]);
      $notify_message->setKeyboard($notify_keyboard);

      app()->notify($notify_message);
      
      $response[] = (new CommandController())->back('',NULL,'',[]);

    }

    return $response;
  }

  public function read($message, $photos, $text, $keyboard) {
    $review = Review::random();
    if($review) {
      $text = $review->data."\n\nüí¨ –ê–≤—Ç–æ—Ä: @".$review->username;
    } else {
      $text = "–û—Ç–∑—ã–≤–æ–≤ –Ω–µ—Ç";
    }

    $response = new Message($text, $keyboard);
    return $response;
  }
}
?>
